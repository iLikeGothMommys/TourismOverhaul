// Contract for sending tourists on a Jool-5 style tour.
//   Author: iLikeGothMommys

CONTRACT_TYPE
{
    name = Tourism_GasGiantGrandTour
    group = interplanetary

    genericTitle = Ferry two tourists to on a grand tour of a gas giant.
    genericDescription = Ferry two tourists on a grand tour of a gas giant system and return them back safely

    title = Ferry two tourists on a grand tour of @targetBody
    title = Ferry two tourists on a grand tour of @targetBody
    description = Two very wealthy tourist woulds visit @targetBody and all of it's moons. We explained that this trip would be very long, and they would probably get bored, but they insisted and are offering a large amount. 
    synopsis = Fly by all of @targetBody's moons.
    completedMessage = The tourist had a great time!

    // Level 3 prestige
    prestige = Exceptional

    targetBody = AllBodies().Where(b => !b.HasSurface() && !b.IsSun() && b.IsPlanet() && b.Children().Count() > 0 && b != HomeWorld().Parent() && b.Parent() == HomeWorld().Parent() && b.HasAtmosphere()).Random()

    // Only one of these shows up at a time
    maxSimultaneous = 1
	
	// Quickly Expire & Deadline
	minExpiry = 6.0
	maxExpiry = 25.0	
	deadline = Random(9372, 12780)

    // Contract rewards
    rewardFunds = Random(50000.0, 100000.0)
    rewardReputation = 9.0
    failureReputation = 15.0
	PARAMETER 
	{
		name = All
		type = All
	    title = Complete @/randomKerbalName1's travel itinerary
	//FIRST TOURIST
    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

			PARAMETER
			{
				name = HasPassengers1
				type = HasPassengers
				kerbal = @/randomKerbalName1
				hideChildren = true
				hidden = true
			}

        PARAMETER
        {
            type = ReachState

            disableOnStateChange = true

            targetBody = @targetMoon
            maxAltitude = @targetMoon.Radius() / 2.0

            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
    }
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal

			completeInSequence = true
			rewardFunds = Random(85000.0, 90000.0) + (@targetBody.Children().Count() * 25000.0)
			kerbal = @/randomKerbalName1	
		}
	}
		
//SECOND Contract
	PARAMETER 
	{
		name = All
		type = All
	    title = Complete @/randomKerbalName2's travel itinerary
		
    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        title = Complete @/randomKerbalName2's travel itinerary

        PARAMETER
        {
            name = HasCrew
            type = HasCrew

            trait = Pilot
        }

			PARAMETER
			{
				name = HasPassengers2
				type = HasPassengers
				kerbal = @/randomKerbalName2
				hideChildren = true
				hidden = true
			}

        PARAMETER
        {
            type = ReachState

            disableOnStateChange = true

            targetBody = @targetMoon
            maxAltitude = @targetMoon.Radius() / 2.0

            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
    }

		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal

			completeInSequence = true
			rewardFunds = Random(35000.0, 50000.0) + @targetBody.Children().Count() * 25000.0
			kerbal = @/randomKerbalName2
		}
	}
	
	DATA
	{
		type = Kerbal
		title = randomly generates name for first tourist
		randomKerbalName1 = NewKerbal(Random(), @TourismOverhaul:kerbalNameList.Random())
	}
	DATA
	{
		type = Kerbal
		title = randomly generates name for second tourist
		randomKerbalName2 = NewKerbal(Random(), @TourismOverhaul:kerbalNameList.Random())
	}

    BEHAVIOUR
    {
        name = SpawnPassengers1
        type = SpawnPassengers
		kerbal = @/randomKerbalName1
    }
	BEHAVIOUR
    {
        name = SpawnPassengers2
        type = SpawnPassengers
		kerbal = @/randomKerbalName2
    }
	
	 REQUIREMENT
    {
        name = Any
        type = Any

        hideChildren = true
        title = Must have gained recognition for achievments in the space tourism industry
		
		REQUIREMENT 
		{
			name = CompleteContract
			type = CompleteContract
			minCount = 1
			contractType = Tourism_Interplanetary1Tourist
		}
		REQUIREMENT 
		{
			name = CompleteContract
			type = CompleteContract
			minCount = 1
			contractType = Tourism_Interplanetary2Tourist
		}
		REQUIREMENT 
		{
			name = CompleteContract
			type = CompleteContract
			minCount = 1
			contractType = Tourism_Interplanetary3Tourist
		}
		REQUIREMENT 
		{
			name = CompleteContract
			type = CompleteContract
			minCount = 1
			contractType = Tourism_Interplanetary4Tourist
		}
		REQUIREMENT 
		{
			name = CompleteContract
			type = CompleteContract
			minCount = 1
			contractType = Tourism_InterplanetaryLanding1Tourist
		}
		REQUIREMENT 
		{
			name = CompleteContract
			type = CompleteContract
			minCount = 1
			contractType = Tourism_InterplanetaryLanding2Tourist
		}
		REQUIREMENT 
		{
			name = CompleteContract
			type = CompleteContract
			minCount = 1
			contractType = Tourism_InterplanetaryLanding3Tourist
		}
		REQUIREMENT 
		{
			name = CompleteContract
			type = CompleteContract
			minCount = 1
			contractType = Tourism_InterplanetaryLanding4Tourist
		}
		REQUIREMENT 
		{
			name = CompleteContract
			type = CompleteContract
			minCount = 1
			contractType = Attraction
		}
		
    }

}
